if game.PlaceId == 8737899170 then
    local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
    local Window = OrionLib:MakeWindow({
        Name = "Script Hub Pet Simulator 99 🐕",
        HidePremium = false, 
        introEnabled = false,
        SaveConfig = true, 
        ConfigFolder = "OrionTest"
    })
 
    -- Tabs
 
    local TeleportTab = Window:MakeTab({
        Name = "Teleport",
        Icon = "rbxassetid://4483287998",
        PremiumOnly = false
    })
 
    local PlayerTab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483478998",
        PremiumOnly = false
    })
 
    local AutoFarmTab = Window:MakeTab({
        Name = "AutoFarm",
        Icon = "rbxassetid://5098046348",
        PremiumOnly = false
    })
 
    local SettingsTab = Window:MakeTab({
        Name = "Settings",
        Icon = "rbxassetid://2042351669",
        PremiumOnly = false
    })
 
    local AboutTab = Window:MakeTab({
        Name = "About",
        Icon = "rbxassetid://4345545998",
        PremiumOnly = false
    })
 
    local bestTab = Window:MakeTab({
        Name = "Made By A&R©",
        Icon = "rbxassetid://17368089878",
        PremiumOnly = false
    })
 
    -- Fly Functionality
    local currentFlySpeed = 50 -- Default fly speed
    local speaker = game:GetService("Players").LocalPlayer
    local isFlying = false
    local bodyGyro, bodyVelocity
 
    local function setFlyState(enable)
        local character = speaker.Character
        local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        if not humanoid or not rootPart then return end
 
        if enable then
            isFlying = true
            humanoid.PlatformStand = true
 
            -- Add BodyGyro and BodyVelocity for smooth flight
            bodyGyro = Instance.new("BodyGyro", rootPart)
            bodyGyro.P = 9e4
            bodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            bodyGyro.cframe = rootPart.CFrame
 
            bodyVelocity = Instance.new("BodyVelocity", rootPart)
            bodyVelocity.velocity = Vector3.zero
            bodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
 
            spawn(function()
                while isFlying and character and rootPart.Parent do
                    local moveDirection = humanoid.MoveDirection
                    local camera = game.Workspace.CurrentCamera
                    local cameraLookVector = camera.CFrame.LookVector
                    bodyGyro.cframe = camera.CFrame
                    if moveDirection.Magnitude > 0 then
                        bodyVelocity.velocity = (moveDirection * currentFlySpeed) + Vector3.new(0, cameraLookVector.Y * currentFlySpeed, 0)
                    else
                        bodyVelocity.velocity = Vector3.new(0, cameraLookVector.Y * currentFlySpeed, 0)
                    end
                    wait()
                end
            end)
        else
            isFlying = false
            humanoid.PlatformStand = false
 
            -- Remove BodyGyro and BodyVelocity
            if bodyGyro then bodyGyro:Destroy() end
            if bodyVelocity then bodyVelocity:Destroy() end
        end
    end
 
    -- No-Clip Functionality
    local noClipEnabled = false
    local noClipConnection
 
    local function setNoClipState(enable)
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local runService = game:GetService("RunService")
 
        if enable then
            noClipEnabled = true
            print("No-Clip enabled")
 
            -- Start the No-Clip functionality
            noClipConnection = runService.Stepped:Connect(function()
                if noClipEnabled and character then
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then
                            part.CanCollide = false
                        end
                    end
                else
                    -- Disconnect when No-Clip is disabled
                    noClipConnection:Disconnect()
                end
            end)
        else
            noClipEnabled = false
            print("No-Clip disabled")
 
            -- Re-enable collisions for character parts
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
 
    -- GodMode Functionality
    local godModeEnabled = false
    local godModeConnection
 
    local function setGodModeState(enable)
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildWhichIsA("Humanoid")
 
        if enable then
            godModeEnabled = true
            print("GodMode enabled")
 
            -- Start the GodMode functionality
            godModeConnection = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                if godModeEnabled and humanoid then
                    humanoid.Health = humanoid.MaxHealth
                end
            end)
        else
            godModeEnabled = false
            print("GodMode disabled")
 
            -- Disconnect the GodMode functionality
            if godModeConnection then
                godModeConnection:Disconnect()
            end
        end
    end
 
    -- Infinite Jump Functionality
    local infiniteJumpEnabled = false
    local userInputService = game:GetService("UserInputService")
 
    local function setInfiniteJumpState(enable)
        infiniteJumpEnabled = enable
        if infiniteJumpEnabled then
            print("Infinite Jump enabled")
            userInputService.JumpRequest:Connect(function()
                if infiniteJumpEnabled then
                    local player = game:GetService("Players").LocalPlayer
                    local character = player.Character or player.CharacterAdded:Wait()
                    local humanoid = character:FindFirstChildWhichIsA("Humanoid")
                    if humanoid then
                        humanoid:ChangeState("Jumping")
                    end
                end
            end)
        else
            print("Infinite Jump disabled")
        end
    end
 
    -- Variables for egg opening
    local selectedEggType = "Cracked Egg"
    local amountOfEggsToOpen = 1
    local autoOpenEggs = false
 
    -- Auto clicker function
    local function autoClick()
        local VirtualInputManager = game:GetService("VirtualInputManager")
        local screenCenter = Vector2.new(game:GetService("Workspace").CurrentCamera.ViewportSize.X / 2, game:GetService("Workspace").CurrentCamera.ViewportSize.Y / 2)
 
        for i = 1, 7 do
            VirtualInputManager:SendMouseButtonEvent(screenCenter.X, screenCenter.Y, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(screenCenter.X, screenCenter.Y, 0, false, game, 0)
            wait(0.1) -- Adjust the delay as needed
        end
    end
 
    -- Function to open eggs
    local function openEggs()
        while autoOpenEggs do
            for i = 1, amountOfEggsToOpen do
                if not autoOpenEggs then break end
                local args = {
                    [1] = selectedEggType,
                    [2] = 1
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Eggs_RequestPurchase"):InvokeServer(unpack(args))
                wait(1) -- Wait for the egg to open
                autoClick() -- Perform auto click after opening each egg
                wait(0.5) -- Adjust the delay as needed
            end
            wait(1) -- Wait before starting the next batch
        end
    end
 
    -- Toggle button for opening eggs
    AutoFarmTab:AddToggle({
        Name = "Auto Open Eggs (Coins&Unlocks Needed!)",
        Default = false,
        Callback = function(Value)
            autoOpenEggs = Value
            if autoOpenEggs then
                print("Starting to auto open eggs...")
                spawn(openEggs)
            else
                print("Stopped auto opening eggs.")
            end
            print("Auto Open Eggs: " .. tostring(autoOpenEggs))
        end
    })
 
    PlayerTab:AddButton({
        Name = "Fly",
        Callback = function()
            isFlying = not isFlying
            setFlyState(isFlying)
            if isFlying then
                print("Fly enabled")
            else
                print("Fly disabled")
            end
        end
    })
 
    SettingsTab:AddButton({
        Name = "Anti-AFK",
        Callback = function()
            print("Anti-AFK enabled")
            local vu = game:GetService("VirtualUser")
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                vu:Button2Down(Vector2.new(0, 0), Vector2.new(0, 0))
                wait(1)
                vu:Button2Up(Vector2.new(0, 0), Vector2.new(0, 0))
            end)
        end
    })
 
 
 
    PlayerTab:AddButton({
        Name = "No-Clip",
        Callback = function()
            noClipEnabled = not noClipEnabled
            setNoClipState(noClipEnabled)
            if noClipEnabled then
                print("No-Clip enabled")
            else
                print("No-Clip disabled")
            end
        end
    })
 
    PlayerTab:AddButton({
        Name = "GodMode",
        Callback = function()
            godModeEnabled = not godModeEnabled
            setGodModeState(godModeEnabled)
            if godModeEnabled then
                print("GodMode enabled")
            else
                print("GodMode disabled")
            end
        end
    })
 
    PlayerTab:AddButton({
        Name = "Infinite Jump",
        Callback = function()
            infiniteJumpEnabled = not infiniteJumpEnabled
            setInfiniteJumpState(infiniteJumpEnabled)
        end
    })
 
 
    -- Teleport Locations
    local teleportLocations = {
        Vector3.new(213.79515075683594, 16.274578094482422, -203.53152465820312),
        Vector3.new(374.8357849121094, 16.274578094482422, -205.11228942871094),
        Vector3.new(526.6378173828125, 16.274580001831055, -206.22215270996094),
        Vector3.new(691.3451538085938, 16.274580001831055, -204.63133239746094),
        Vector3.new(848.1851196289062, 16.274580001831055, -192.61953735351562),
        Vector3.new(847.5208740234375, 16.274580001831055, -0.8014041185379028),
        Vector3.new(696.9450073242188, 16.267080307006836, 27.423690795898438),
        Vector3.new(538.4768676757812, 16.274587631225586, 28.557180404663086),
        Vector3.new(385.2066345214844, 16.274433135986328, 27.87362289428711),
        Vector3.new(214.7382354736328, 16.274580001831055, 34.06119155883789),
        Vector3.new(214.96493530273438, 16.274580001831055, 241.9881591796875),
        Vector3.new(370.7105712890625, 15.962950706481934, 271.17864990234375),
        Vector3.new(378.1454772949219, 17.159137725830078, 270.8224792480469),
        Vector3.new(722.1943969726562, 42.9524040222168, 263.8341064453125),
        Vector3.new(851.789306640625, 53.946842193603516, 268.8973083496094),
        Vector3.new(849.0370483398438, 94.76496124267578, 457.2183532714844),
        Vector3.new(707.804443359375, 71.64228820800781, 490.4586181640625),
        Vector3.new(707.804443359375, 71.64228820800781, 490.4586181640625),
        Vector3.new(397.7218933105469, 18.051118850708008, 495.826416015625),
        Vector3.new(217.40435791015625, 35.420074462890625, 504.475830078125),
        Vector3.new(217.3905792236328, 16.274580001831055, 504.4899597167969),
        Vector3.new(217.3905792236328, 16.274580001831055, 504.4899597167969),
        Vector3.new(374.6195068359375, -30.324722290039062, 790.9742431640625),
        Vector3.new(528.0352783203125, -30.272573471069336, 785.7482299804688),
        Vector3.new(803.6939697265625, 16.274553298950195, 786.50634765625),
        Vector3.new(967.0108032226562, 16.274595260620117, 791.8948974609375),
        Vector3.new(966.6515502929688, 16.274595260620117, 988.045654296875),
        Vector3.new(831.4200439453125, 16.274585723876953, 1018.1575317382812),
        Vector3.new(666.3525390625, 16.274011611938477, 1012.5045776367188),
        Vector3.new(515.4801025390625, 16.274587631225586, 1011.9686279296875),
        Vector3.new(361.32818603515625, 16.274578094482422, 1039.3851318359375),
        Vector3.new(357.3394470214844, 16.274578094482422, 1227.86376953125),
        Vector3.new(508.5736999511719, 16.274587631225586, 1258.898681640625),
        Vector3.new(662.8671264648438, 16.274587631225586, 1261.2581787109375),
        Vector3.new(110.64379119873047, 16.571229934692383, -201.2144012451172) -- New location added
    }
 
    local selectedLocation = teleportLocations[1]
 
    TeleportTab:AddDropdown({
        Name = "Location",
        Default = "EGGS",
        Options = {"EGGS", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16",
            "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30",
            "31", "32", "33", "34"}, -- Added "34" for the new location
        Callback = function(Value)
            selectedLocation = teleportLocations[tonumber(Value)]
            print("Selected Location: " .. Value)
        end    
    })
 
    TeleportTab:AddButton({
        Name = "Teleport",
        Callback = function()
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:FindFirstChild("HumanoidRootPart")
 
            if rootPart then
                rootPart.CFrame = CFrame.new(selectedLocation)
                print("Teleported to location:", selectedLocation)
            else
                print("HumanoidRootPart not found!")
            end
        end
    })
 
 
    AutoFarmTab:AddDropdown({
        Name = "Egg Type",
        Default = "Cracked Egg",
        Options = {
            "Cracked Egg", "Spotted Egg", "Paw Egg", "Wood Egg", "Grass Egg", "Beachball Egg", "Coconut Egg", "Rock Egg", 
            "Ice Egg", "Snow Egg", "Icicle Egg", "Candy Egg", "Pumpkin Egg", "Spooky Egg", "Haunted Egg", "Ghost Egg", 
            "Witch Egg", "Bat Egg", "Vampire Egg", "Zombie Egg", "Skeleton Egg", "Pirate Egg", "Treasure Egg", "Chest Egg", 
            "Gold Egg", "Diamond Egg", "Ruby Egg", "Emerald Egg", "Sapphire Egg", "Amethyst Egg", "Rainbow Egg", "Lucky Egg", 
            "Shamrock Egg", "Clover Egg", "Four Leaf Egg", "Leprechaun Egg", "Pot Of Gold Egg", "Unicorn Egg", "Pegasus Egg", 
            "Dragon Egg", "Phoenix Egg", "Griffin Egg", "Hydra Egg", "Cerberus Egg", "Kraken Egg", "Yeti Egg", "Sasquatch Egg", 
            "Bigfoot Egg", "Alien Egg", "UFO Egg", "Martian Egg", "Astronaut Egg", "Rocket Egg", "Space Egg", "Galaxy Egg", 
            "Nebula Egg", "Black Hole Egg", "Supernova Egg", "Cosmic Egg", "Hive Egg", "Bee Egg", "Honey Egg", "Honeycomb Egg", 
            "Wasp Egg", "Hornet Egg", "Bumblebee Egg", "Queen Bee Egg", "Acorn Egg", "Pinecone Egg", "Leaf Egg", "Tree Egg", 
            "Forest Egg", "Jungle Egg", "Savannah Egg", "Desert Egg", "Oasis Egg", "Cactus Egg", "Scorpion Egg", "Camel Egg", 
            "Pyramid Egg", "Mummy Egg", "Sphinx Egg", "Pharaoh Egg", "Scarab Egg", "Ankh Egg", "Cleopatra Egg", "Tutankhamun Egg", 
            "Ra Egg", "Osiris Egg", "Anubis Egg", "Horus Egg", "Set Egg", "Isis Egg", "Bastet Egg", "Sekhmet Egg", "Thoth Egg", 
            "Hathor Egg", "Nephthys Egg", "Ptah Egg", "Amun Egg", "Mut Egg", "Khonsu Egg", "Sobek Egg", "Maat Egg", "Nut Egg", 
            "Shu Egg", "Geb Egg", "Hapi Egg", "Blossom Egg", "Rose Egg", "Tulip Egg", "Daisy Egg", "Sunflower Egg", "Daffodil Egg", 
            "Lily Egg", "Orchid Egg", "Violet Egg", "Poppy Egg", "Carnation Egg", "Peony Egg", "Dahlia Egg", "Hyacinth Egg", 
            "Iris Egg", "Lavender Egg", "Marigold Egg", "Pansy Egg", "Petunia Egg", "Primrose Egg", "Zinnia Egg", "Azalea Egg", 
            "Camellia Egg", "Chrysanthemum Egg", "Gladiolus Egg", "Hibiscus Egg", "Magnolia Egg", "Morning Glory Egg", "Corgi Egg", 
            "Cat Egg", "Dog Egg", "Puppy Egg", "Penguin Egg", "Polar Bear Egg", "Seal Egg", "Walrus Egg", "Arctic Fox Egg", 
            "Arctic Hare Egg", "Geode Egg", "Crystal Egg", "Hut Egg", "Grave Egg", "Spike Egg", "Sprout Egg", "Mushroom Egg", 
            "Cyber Egg", "Fire Egg", "Frost Egg", "Golden Egg", "Hologram Egg", "Pixel Egg", "Platinum Egg"
        },
        Callback = function(Value)
            selectedEggType = Value
            print("Selected Egg Type: " .. Value)
        end    
    })
 
    -- Slider for Amount of Eggs to Open
    AutoFarmTab:AddSlider({
        Name = "Amount Of Eggs To Be Opened",
        Min = 1,
        Max = 100, -- Maximum Eggs to be Opened
        Default = 1, -- Default Eggs to be Opened
        Color = Color3.fromRGB(200, 200, 200),
        Increment = 1,
        ValueName = "Amount Of Eggs To Be Opened",
        Callback = function(Value)
            amountOfEggsToOpen = Value
            print("Amount Of Eggs To Be Opened set to:", Value)
        end    
    })
 
    -- Sliders
    PlayerTab:AddSlider({
        Name = "Jump Height",
        Min = 0,
        Max = 500, -- Adjusted max for higher jumps
        Default = 50, -- Default Roblox jump height
        Color = Color3.fromRGB(200, 200, 200),
        Increment = 1,
        ValueName = "Current Jump Height",
        Callback = function(Value)
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
 
            if humanoid then
                humanoid.JumpPower = Value
                print("Jump Height set to:", Value)
            else
                print("Humanoid not found!")
            end
        end
    })
 
    PlayerTab:AddSlider({
        Name = "Fly Speed",
        Min = 0,
        Max = 2000, -- Maximum fly speed
        Default = 50, -- Default fly speed
        Color = Color3.fromRGB(200, 200, 200),
        Increment = 1,
        ValueName = "Current Fly Speed",
        Callback = function(Value)
            currentFlySpeed = Value
            print("Fly Speed set to:", Value)
        end    
    })
 
    PlayerTab:AddSlider({
        Name = "Walk Speed",
        Min = 0,
        Max = 150,
        Default = 16, -- Default Roblox walk speed
        Color = Color3.fromRGB(200, 200, 200),
        Increment = 1,
        ValueName = "Current Walk Speed",
        Callback = function(Value)
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
 
            if humanoid then
                humanoid.WalkSpeed = Value
                print("Walk Speed set to:", Value)
            else
                print("Humanoid not found!")
            end
        end
    })
 
    PlayerTab:AddSlider({
        Name = "Player Health",
        Min = 0,
        Max = 1000,
        Default = 100,
        Color = Color3.fromRGB(0, 255, 0), -- Green color
        Increment = 1,
        ValueName = "Current Health",
        Callback = function(Value)
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
 
            if humanoid then
                humanoid.MaxHealth = Value
                humanoid.Health = Value
                print("Player Health set to:", Value)
            else
                print("Humanoid not found!")
            end
        end
    })
 
    -- Settings Tab Buttons
    SettingsTab:AddButton({
        Name = "Rejoin Server",
        Callback = function()
            local TeleportService = game:GetService("TeleportService")
            local LocalPlayer = game:GetService("Players").LocalPlayer
 
            local function joinNewServer()
                local PlaceId = game.PlaceId
                TeleportService:Teleport(PlaceId, LocalPlayer)
            end
 
            joinNewServer()
        end
    })
 
    SettingsTab:AddButton({
        Name = "Load Infinite Yield",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
            print("Infinite Yield Loaded")
        end
    })
 
    -- About Tab Buttons
    AboutTab:AddButton({
        Name = "Discord Link",
        Callback = function()
            print("button pressed")
            local link = "https://discord.gg/y6aYwC79"
 
            -- Copy to clipboard
            setclipboard(link)
 
            -- Send notification
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Script Hub Discord",
                Text = "Discord Link Copied! Join Now?",
                Duration = 8,-- Duration the notification will stay on screen
                Button1 = "Thank you!",
            })
        end
    })
 
    OrionLib:Init()
end









